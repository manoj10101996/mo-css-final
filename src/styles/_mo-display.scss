$displayType: (
  "block",
  "inline",
  "inline-block",
  "flex",
  "inline-flex",
  "grid",
  "inline-grid",
  "flow-root",
  "none",
  "contents",
  "block",
  "block-root",
  "table",
  "table-row",
  "list-item",
  "inherit",
  "initial",
  "revert",
  "revert-layer",
  "unset"
);

@each $display in $displayType {
  .mo-d-#{$display} {
    display: #{$display} !important;
  }
}

$positionsValues: (
  "top",
  "bottom",
  "left",
  "right"  
);

@each $position in $positionsValues {
  @for $i from 1 through 100 {
    .mo-#{$position}-#{$i} {
      #{$position}: calc( #{$i}) + "%";
    }
  }
}

$positions: (
  "static",
  "relative",
  "relative",
  "fixed",
  "sticky" 

  "inherit",
  "initial",
  "revert",
  "revert-layer",
  "unset"
);

@each $position in $positions {
  .mo-p-#{$position} {
    position: #{$position} !important;
  }
}

@for $i from 1 through 16 {
  @for $j from 1 through 16 {
    .mo-ratio-#{$i}-#{$j} {
      aspect-ratio: $i / $j;
    }
  }
}

@for $i from 1 through 48 {
  .mo-grid-column-#{$i} {
    grid-template-columns: repeat($i, 1fr);
  }
}

@for $i from 1 through 48 {
  .mo-grid-gap-#{$i} {
    gap: #{$i}px;
  }
}

.mo-opacity {
  opacity: 100%;
}

@for $i from 1 through 100 {
  .mo-opacity-#{$i} {
    opacity: calc( #{$i} / 100 ) + "%";
  }
}

.mo-hr-text {
  position: absolute;
  left: 0;
  bottom: 0;
  transform: rotate(270deg);
  transform-origin: left;
  background-color: white;
  padding: 2.5px 5px;
  border: 1px solid rgba($color: #000000, $alpha: 0.25);
  border-radius: 2.5px;
  font-size: 12px;
  opacity: 0.75;
  cursor: pointer;
}

.mo-hr-text-right {
  position: absolute;
  right: 0;
  bottom: 0;
  transform: rotate(90deg);
  transform-origin: right;
  background-color: white;
  padding: 2.5px 5px;
  border: 1px solid rgba(0, 0, 0, 0.25);
  border-radius: 2.5px;
  font-size: 12px;
  opacity: 0.75;
  cursor: pointer;
}

.mo-hr-text:hover,
.mo-hr-text-right:hover {
  cursor: pointer;
  opacity: 1;
}

.mo-cursor {
  cursor: pointer !important;
}

$justifyContent: (
  "center",
  "start",
  "end",
  "flex-start",
  "flex-end" 
  "left",
  "right",

  "normal",

  "space-between",
  "space-around",
  "space-evenly",
  "stretch",

  "safe center",
  "unsafe center",
 
  
  "inherit",
  "initial",
  "revert",
  "revert-layer",
  "unset"
);

@each $justify in $justifyContent {
  .mo-justify-content-#{$justify} {
    justify-content: #{$justify} !important;
  }

  .mo-align-content-#{$justify} {
    align-content: #{$justify} !important;
  }

  .mo-justify-items-#{$justify} {
    justify-items: #{$justify} !important;
  }

  .mo-align-items-#{$justify} {
    align-items: #{$justify} !important;
  }
}

 